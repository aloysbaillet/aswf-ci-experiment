version: 2.1

executors:
  aswf-vfx2018-conan:
    docker:
      - image: aloysbaillet/aswf-vfx2018-conan

commands:
  build-conan-package:
    description: "Build Conan Package"
    parameters:
      package:
        description: "Conan package name"
        type: string
        default: ""
      conan_cpu_count:
        description: "Number of CPUs to use during build"
        type: integer
        default: 36
    steps:
      - checkout
      - run:
          name: << parameters.package >> build
          environment: 
            CONAN_PRINT_RUN_COMMANDS: 1
            CONAN_LOGGING_LEVEL: 10 # debug
            CONAN_CPU_COUNT: << parameters.conan_cpu_count >>
          command: conan create conan/<< parameters.package >> aswf/vfx2018
      - persist_to_workspace:
          root: /home/circleci/.conan/data
          paths:
            - << parameters.package >>

jobs:
  build-docker-images:
    machine: true
    steps:
      - checkout
      # login docker
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      # build the base image
      - run: docker build docker/aswf-vfx2018 -t aloysbaillet/aswf-vfx2018
      # deploy the base image
      - run: docker push aloysbaillet/aswf-vfx2018
      # build the conan image
      - run: docker build docker/aswf-vfx2018-conan -t aloysbaillet/aswf-vfx2018-conan
      # deploy the conan image
      - run: docker push aloysbaillet/aswf-vfx2018-conan

  build-TBB:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: TBB

  build-boost:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: boost
          conan_cpu_count: 8

  build-numpy:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: numpy

  build-Qt:
    executor: aswf-vfx2018-conan
    steps:
      - checkout
      - run:
          name: Qt build
          environment: 
            CONAN_CPU_COUNT: 8 # the default of 36 on circleci makes the jor run out of memory!
            PARALLEL_JOBS: 4 # limit for qt build
            NINJAFLAGS: -j8 # limit for chromium build
          command: conan create conan/Qt aswf/vfx2018
      - persist_to_workspace:
          root: /home/circleci/.conan/data
          paths:
            - Qt

  build-PySide:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: PySide

  build-IlmBase:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: IlmBase

  build-OpenEXR:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: OpenEXR

  build-PyIlmBase:
    executor: aswf-vfx2018-conan
    steps:
      - build-conan-package:
          package: PyIlmBase
          conan_cpu_count: 4

  deploy:
    executor: aswf-vfx2018-conan

    steps:
      - attach_workspace:
          at: /home/circleci/.conan/data
      - run:
          name: Packages upload
          command: |
            conan user
            conan upload TBB/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload boost/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload numpy/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload Qt/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload PySide/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload IlmBase/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload OpenEXR/*@aswf/vfx2018 --force --confirm --all -r=aswftest
            conan upload PyIlmBase/*@aswf/vfx2018 --force --confirm --all -r=aswftest

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - build-docker-images:
          filters:
            branches:
              only: master
      - build-TBB:
          requires:
            - build-docker-images
      - build-boost:
          requires:
            - build-docker-images
      - build-numpy:
          requires:
            - build-docker-images
      - build-IlmBase:
          requires:
            - build-docker-images
      - build-OpenEXR:
          requires:
            - build-IlmBase
      - build-PyIlmBase:
          requires:
            - build-boost
            - build-IlmBase
            - build-numpy
      - build-Qt:
          requires:
            - build-docker-images
      - build-PySide:
          requires:
            - build-Qt
      - deploy:
          requires:
            - build-TBB
            - build-boost
            - build-numpy
            - build-Qt
            - build-PySide
            - build-IlmBase
            - build-OpenEXR
            - build-PyIlmBase
          filters:
            branches:
              only: master
